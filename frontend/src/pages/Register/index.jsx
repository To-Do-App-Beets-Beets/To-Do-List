// TODO: Importe useState do React.
// TODO: Importe useNavigate e Link do 'react-router-dom'.
// TODO: Importe o hook useAuth j치 criado

/**
 * ======================================================================================
 * P치gina de Registro (Register Page)
 * ======================================================================================
 *
 * Prop칩sito:
 * ----------
 * Esta p치gina permite que novos usu치rios se cadastrem na aplica칞칚o.
 * Coleta nome, email e senha, cria conta no Firebase e registra no backend.
 *
 * Funcionalidades:
 * ---------------
 * 1. Formul치rio com campos de nome, email e senha
 * 2. Valida칞칚o b치sica dos campos
 * 3. Cria칞칚o de conta via Firebase
 * 4. Registro de dados adicionais no backend
 * 5. Redirecionamento ap칩s registro bem-sucedido
 * 6. Link para p치gina de login
 */

// TODO: Crie e exporte como padr칚o a fun칞칚o Register.
export default function Register() {
  // 游꿢 Objetivo 1: Configurar hooks e estados
  // TODO: Use useNavigate() para obter a fun칞칚o de navega칞칚o.
  // TODO: Use useAuth() para obter { signUp }.
  
  // TODO: Crie o estado formData com useState, iniciando com:
  // { name: '', email: '', password: '' }
  
  // TODO: Crie o estado error com useState, iniciando com string vazia.

  // 游꿢 Objetivo 2: Implementar fun칞칚o de envio do formul치rio
  // TODO: Crie uma fun칞칚o handleSubmit que seja async e receba (e) como par칙metro.
  // 1. Chame e.preventDefault()
  // 2. Limpe o erro: setError('')
  // 3. Use try/catch:
  //    - No try: chame await signUp(formData) e navigate('/dashboard')
  //    - No catch: chame setError(err.message)

  // 游꿢 Objetivo 3: Implementar fun칞칚o de mudan칞a nos campos
  // TODO: Crie uma fun칞칚o handleChange que receba (e) como par칙metro.
  // Use setFormData({ ...formData, [e.target.name]: e.target.value })

  // 游꿢 Objetivo 4: Criar a interface da p치gina
  // TODO: Crie uma p치gina de registro atrativa com:
  // 1. T칤tulo "Cadastro" ou similar
  // 2. Formul치rio com campos: nome, email, senha
  // 3. Valida칞칚o de senha (m칤nimo 6 caracteres)
  // 4. Bot칚o de envio
  // 5. Link para p치gina de login
  // 6. Exibi칞칚o de erros quando necess치rio
  // 7. Estiliza칞칚o com CSS inline. Se desejar, use um arquivo de estilos separado, mas na mesma pasta.

  // TODO: Retorne a estrutura JSX da p치gina
  return null; // Substitua por sua implementa칞칚o
}