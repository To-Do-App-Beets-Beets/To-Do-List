// Importa√ß√µes necess√°rias do Firebase Admin SDK e para carregar vari√°veis de ambiente.
const admin = require('firebase-admin');
const { getFirestore } = require('firebase-admin/firestore');
require('dotenv').config();

/**
 * ======================================================================================
 * Arquivo de Configura√ß√£o e Inicializa√ß√£o do Firebase
 * ======================================================================================
 *
 * Prop√≥sito:
 * ----------
 * Este arquivo tem uma √∫nica e crucial responsabilidade: inicializar a conex√£o com o
 * Firebase Admin SDK. Ele age como um "singleton", garantindo que a inicializa√ß√£o
 * ocorra apenas uma vez em toda a aplica√ß√£o.
 *
 * Por que isso √© importante?
 * --------------------------
 * Conectar-se a servi√ßos externos (como o Firebase) √© uma opera√ß√£o que consome recursos.
 * N√£o queremos repetir essa conex√£o toda vez que precisarmos falar com o banco de dados
 * ou com o servi√ßo de autentica√ß√£o. Centralizar a inicializa√ß√£o aqui garante efici√™ncia
 * e um ponto √∫nico de configura√ß√£o.
 */

// üéØ Objetivo 1: Garantir que as credenciais de acesso est√£o configuradas.
// O Firebase Admin SDK precisa de um "arquivo-chave" (JSON) para se autenticar com
// seguran√ßa em nome do seu servidor. A vari√°vel de ambiente
// 'GOOGLE_APPLICATION_CREDENTIALS' informa ao SDK onde encontrar esse arquivo.
// TODO: Verifique se a vari√°vel de ambiente 'process.env.GOOGLE_APPLICATION_CREDENTIALS'
// existe. Se n√£o existir, dispare um erro para parar a aplica√ß√£o, pois ela n√£o
// funcionar√° corretamente sem isso.


// üéØ Objetivo 2: Inicializar o SDK, mas apenas se ele ainda n√£o foi inicializado.
// Em ambientes de teste ou com recarregamento de m√≥dulos (hot-reloading), este arquivo
// pode ser executado m√∫ltiplas vezes. Tentar inicializar o app do Firebase mais de uma
// vez causa um erro. Por isso, verificamos 'admin.apps.length' para garantir que a
// inicializa√ß√£o s√≥ aconte√ßa na primeira vez.
if (!admin.apps.length) {
  try {
    // TODO: Chame a fun√ß√£o 'admin.initializeApp()' para conectar ao Firebase.
    // Ela usar√° automaticamente as credenciais da vari√°vel de ambiente.
    
    console.log('üî• Firebase inicializado com sucesso!');
  } catch (error) {
    console.error('‚ùå Erro ao inicializar Firebase:', error);
    throw error; // Se a inicializa√ß√£o falhar, a aplica√ß√£o n√£o deve continuar.
  }
}

// üéØ Objetivo 3: Exportar as inst√¢ncias dos servi√ßos que vamos usar no resto do app.
// Uma vez inicializado, podemos obter acesso a diferentes servi√ßos do Firebase.
// TODO: Crie uma constante 'db' para a inst√¢ncia do Firestore, usando getFirestore().
// TODO: Crie uma constante 'auth' para a inst√¢ncia do Authentication, usando admin.auth().
const db = null;   // Substitua null pela sua implementa√ß√£o
const auth = null; // Substitua null pela sua implementa√ß√£o


// TODO: Exporte os objetos 'db' e 'auth' para serem usados em outras partes do app.